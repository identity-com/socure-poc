{"version":3,"file":"socure-poc-backend.esm.js","sources":["../src/index.ts"],"sourcesContent":["import express, {Request, Response} from \"express\";\nimport cors from \"cors\";\n\nconst PORT: number = process.env.PORT ? parseInt(process.env.PORT as string, 10) : 80;\n\nconst app = express();\n\napp.use(cors());\napp.use(express.json());\n\napp.post('/result', (request: Request, response: Response) => {\n\n    // TODO: Store response body\n    // TODO: Fire up evervault cage to download, and encrypt images\n    // TODO: Issue pass\n\n    console.log(request.body);\n\n    // TODO: Do we need this ?\n    response.setHeader('Access-Control-Allow-Origin', '*');\n    response.setHeader('Access-Control-Allow-Methods', '*');\n    response.setHeader('Access-Control-Allow-Headers', '*');\n\n    return response.json({\n        valid: request.body.documentVerification.decision.value === 'accept',\n        data: request.body,\n    });\n});\n\napp.listen(PORT, () => {\n    console.log(`Listening on port ${PORT}`);\n});\n"],"names":["PORT","process","env","parseInt","app","express","use","cors","json","post","request","response","console","log","body","setHeader","valid","documentVerification","decision","value","data","listen"],"mappings":";;;AAGA,IAAMA,IAAI,GAAWC,OAAO,CAACC,GAAR,CAAYF,IAAZ,gBAAmBG,QAAQ,CAACF,OAAO,CAACC,GAAR,CAAYF,IAAb,EAA6B,EAA7B,CAA3B,GAA8D,EAAnF;AAEA,IAAMI,GAAG,gBAAGC,OAAO,EAAnB;AAEAD,GAAG,CAACE,GAAJ,CAAQC,IAAI,EAAZ;AACAH,GAAG,CAACE,GAAJ,CAAQD,OAAO,CAACG,IAAR,EAAR;AAEAJ,GAAG,CAACK,IAAJ,CAAS,SAAT,EAAoB,UAACC,OAAD,EAAmBC,QAAnB;;;;EAMhBC,OAAO,CAACC,GAAR,CAAYH,OAAO,CAACI,IAApB;;EAGAH,QAAQ,CAACI,SAAT,CAAmB,6BAAnB,EAAkD,GAAlD;EACAJ,QAAQ,CAACI,SAAT,CAAmB,8BAAnB,EAAmD,GAAnD;EACAJ,QAAQ,CAACI,SAAT,CAAmB,8BAAnB,EAAmD,GAAnD;EAEA,OAAOJ,QAAQ,CAACH,IAAT,CAAc;IACjBQ,KAAK,EAAEN,OAAO,CAACI,IAAR,CAAaG,oBAAb,CAAkCC,QAAlC,CAA2CC,KAA3C,KAAqD,QAD3C;IAEjBC,IAAI,EAAEV,OAAO,CAACI;GAFX,CAAP;AAIH,CAjBD;AAmBAV,GAAG,CAACiB,MAAJ,CAAWrB,IAAX,EAAiB;EACbY,OAAO,CAACC,GAAR,wBAAiCb,IAAjC;AACH,CAFD"}