{"version":3,"file":"socure-poc-backend.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import express, {Request, Response} from \"express\";\nimport cors from \"cors\";\n\nconst PORT: number = process.env.PORT ? parseInt(process.env.PORT as string, 10) : 80;\n\nconst app = express();\n\napp.use(cors());\napp.use(express.json());\n\napp.post('/result', (request: Request, response: Response) => {\n\n    // TODO: Store response body\n    // TODO: Fire up evervault cage to download, and encrypt images\n    // TODO: Issue pass\n\n    console.log(request.body);\n\n    // TODO: Do we need this ?\n    response.setHeader('Access-Control-Allow-Origin', '*');\n    response.setHeader('Access-Control-Allow-Methods', '*');\n    response.setHeader('Access-Control-Allow-Headers', '*');\n\n    return response.json({\n        valid: request.body.documentVerification.decision.value === 'accept',\n        data: request.body,\n    });\n});\n\napp.listen(PORT, () => {\n    console.log(`Listening on port ${PORT}`);\n});\n"],"names":["PORT","process","env","parseInt","app","express","use","cors","json","post","request","response","console","log","body","setHeader","valid","documentVerification","decision","value","data","listen"],"mappings":"oIAGMA,EAAeC,QAAQC,IAAIF,KAAOG,SAASF,QAAQC,IAAIF,KAAgB,IAAM,GAE7EI,EAAMC,IAEZD,EAAIE,IAAIC,KACRH,EAAIE,IAAID,EAAQG,QAEhBJ,EAAIK,KAAK,WAAW,SAACC,EAAkBC,GAanC,OAPAC,QAAQC,IAAIH,EAAQI,MAGpBH,EAASI,UAAU,8BAA+B,KAClDJ,EAASI,UAAU,+BAAgC,KACnDJ,EAASI,UAAU,+BAAgC,KAE5CJ,EAASH,KAAK,CACjBQ,MAA4D,WAArDN,EAAQI,KAAKG,qBAAqBC,SAASC,MAClDC,KAAMV,EAAQI,UAItBV,EAAIiB,OAAOrB,GAAM,WACbY,QAAQC,yBAAyBb"}